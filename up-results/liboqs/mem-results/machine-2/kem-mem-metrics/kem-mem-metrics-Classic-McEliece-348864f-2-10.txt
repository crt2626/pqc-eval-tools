--------------------------------------------------------------------------------
Command:            ./test_kem_mem Classic-McEliece-348864f 2
Massif arguments:   --stacks=yes --massif-out-file=massif.out
ms_print arguments: massif.out
--------------------------------------------------------------------------------


    KB
303.8^                                                              #:    ::  
     |                                                             :#:::::::: 
     |                                                             :#:::::::: 
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
     |                                                             :#:::::::::
   0 +----------------------------------------------------------------------->Mi
     0                                                                   2.637

Number of snapshots: 56
 Detailed snapshots: [20, 25, 32, 38, 41, 44 (peak)]

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  0              0                0                0             0            0
  1         68,342            1,048                0             0        1,048
  2        108,151            1,704                0             0        1,704
  3        160,068            1,240                0             0        1,240
  4        278,775            1,240                0             0        1,240
  5        336,031            1,704                0             0        1,704
  6        403,088            1,464                0             0        1,464
  7        443,387            1,240                0             0        1,240
  8        486,366            1,240                0             0        1,240
  9        552,451            1,704                0             0        1,704
 10        595,845            1,704                0             0        1,704
 11        655,587            1,704                0             0        1,704
 12        699,250            1,520                0             0        1,520
 13        769,541            1,800                0             0        1,800
 14        818,153            1,800                0             0        1,800
 15        849,995            1,704                0             0        1,704
 16        905,475            1,240                0             0        1,240
 17        968,918            1,704                0             0        1,704
 18      1,016,394            1,800                0             0        1,800
 19      1,063,972            1,560                0             0        1,560
 20      1,111,802            1,464                0             0        1,464
00.00% (0B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 21      1,159,093            1,464                0             0        1,464
 22      1,214,498            1,704                0             0        1,704
 23      1,280,810            1,704                0             0        1,704
 24      1,335,848            1,704                0             0        1,704
 25      1,402,155            1,704                0             0        1,704
00.00% (0B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 26      1,446,174            1,240                0             0        1,240
 27      1,501,443            1,240                0             0        1,240
 28      1,567,475            1,792                0             0        1,792
 29      1,611,514            1,464                0             0        1,464
 30      1,644,686            1,464                0             0        1,464
 31      1,689,018            1,704                0             0        1,704
 32      1,733,038            1,464                0             0        1,464
00.00% (0B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 33      1,784,396            1,464                0             0        1,464
 34      1,856,263            1,464                0             0        1,464
 35      1,928,114            1,304                0             0        1,304
 36      1,964,151            1,464                0             0        1,464
 37      2,035,958            1,704                0             0        1,704
 38      2,071,940            1,464                0             0        1,464
00.00% (0B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 39      2,125,862            1,520                0             0        1,520
 40      2,179,648            1,240                0             0        1,240
 41      2,251,631            1,464                0             0        1,464
00.00% (0B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 42      2,305,408            1,560                0             0        1,560
 43      2,364,908          297,560          267,844            60       29,656
 44      2,391,103          311,064          267,844            60       43,160
86.11% (267,844B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->83.94% (261,120B) 0x10A5DB: main (in /pqc/pqc-eval-tools/builds/x86-liboqs-linux/tests/test_kem_mem)
| 
->02.07% (6,452B) 0x10A5E7: main (in /pqc/pqc-eval-tools/builds/x86-liboqs-linux/tests/test_kem_mem)
| 
->00.09% (272B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 45      2,426,937          311,064          267,844            60       43,160
 46      2,463,261          309,016          267,844            60       41,112
 47      2,499,098          298,616          267,844            60       30,712
 48      2,553,133          298,616          267,844            60       30,712
 49      2,606,901          298,616          267,844            60       30,712
 50      2,633,101          311,064          267,844            60       43,160
 51      2,659,300          311,064          267,844            60       43,160
 52      2,685,660          309,016          267,844            60       41,112
 53      2,711,937          309,016          267,844            60       41,112
 54      2,738,188          270,856          267,844            60        2,952
 55      2,764,632          269,680          268,068           100        1,512
